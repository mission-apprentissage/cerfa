---
  - hosts: "{{ env }}-app"
    become: true
    gather_facts: false
    tasks:
      - name: Add modules to Initramfs for docker compatibility
        ansible.builtin.lineinfile:
          path: /etc/initramfs-tools/modules
          regexp: "^{{ item }}"
          line: "{{ item }}"
        loop:
          - overlay
          - br_netfilter
          - bridge
          - veth
          - xt_nat
        register: modules_file

      - name: Update initramfs
        ansible.builtin.command: "update-initramfs -u -k all"
        register: update_initramfs
        changed_when: update_initramfs.rc == 0
        failed_when: update_initramfs.rc != 0
        when: modules_file.changed
        tags:
          - skip_ansible_lint

      - name: Update Grub
        ansible.builtin.command: "update-grub"
        register: update_grub
        changed_when: update_grub.rc == 0
        failed_when: update_grub.rc != 0
        when: update_initramfs.changed
        tags:
          - skip_ansible_lint

      - name: Reboot and wait for it to restart
        reboot:
          msg: "Reboot initiated by Ansible"
          connect_timeout: 5
          reboot_timeout: 300
          pre_reboot_delay: 0
          post_reboot_delay: 30
          test_command: whoami
        when: update_grub.changed
        tags:
          - skip_ansible_lint

  - hosts: "{{env}}-app"
    become: true
    gather_facts: true
    tasks:
      - name: Create docker configuration directory
        ansible.builtin.file:
          path: "/etc/docker/"
          state: directory
          owner: root
          group: root
          mode: '0755'

      - name: Copy docker configuration
        ansible.builtin.copy:
          src: pdigi/daemon.json
          dest: "/etc/docker/daemon.json"
          owner: root
          group: root
          mode: '0644'

      - name: "Setup docker key"
        apt_key:
          url: https://download.docker.com/linux/debian/gpg
          state: present

      - name: "setup docker repository"
        apt_repository:
          repo: deb https://download.docker.com/linux/debian bullseye stable

      - name: "Install requisites"
        apt:
          name:
          - vim
          - docker-ce
          - python3-pip
          - python3-docker
          - "acl"
          - git
          - libffi-dev
          state: present

      - name: "install docker-compose"
        pip:
          executable: "pip3"
          name: docker-compose
        environment:
          TMP: /var/tmp

      - name: "create application directory"
        ansible.builtin.file:
          path: /opt/pdigi
          state: directory

      - name: ajout cron server batch
        cron:
          name: "server jobs"
          minute: "15"
          hour: "*"
          weekday: "*"
          job: "docker exec cerfa_server yarn --silent jobs >> /var/log/server-jobs.log"
